package com.birdcopy.BirdCopyApp.DataManager.ActiveDAO;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;


// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table BE__DIC__PUB.
*/
public class BE_DIC_PUBDao extends AbstractDao<BE_DIC_PUB, Long> {

    public static final String TABLENAME = "BE__DIC__PUB";

    /**
     * Properties of entity BE_DIC_PUB.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property BEWORD = new Property(1, String.class, "BEWORD", false, "BEWORD");
        public final static Property BEINDEX = new Property(2, Integer.class, "BEINDEX", false, "BEINDEX");
        public final static Property BEENTRY = new Property(3, String.class, "BEENTRY", false, "BEENTRY");
        public final static Property BETAG = new Property(4, String.class, "BETAG", false, "BETAG");
    };


    public BE_DIC_PUBDao(DaoConfig config) {
        super(config);
    }
    
    public BE_DIC_PUBDao(DaoConfig config, DicDaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'BE__DIC__PUB' (" + //
                "'_id' INTEGER PRIMARY KEY ," + // 0: id
                "'BEWORD' TEXT NOT NULL ," + // 1: BEWORD
                "'BEINDEX' INTEGER," + // 2: BEINDEX
                "'BEENTRY' TEXT," + // 3: BEENTRY
                "'BETAG' TEXT);"); // 4: BETAG
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'BE__DIC__PUB'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, BE_DIC_PUB entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindString(2, entity.getBEWORD());
 
        Integer BEINDEX = entity.getBEINDEX();
        if (BEINDEX != null) {
            stmt.bindLong(3, BEINDEX);
        }
 
        String BEENTRY = entity.getBEENTRY();
        if (BEENTRY != null) {
            stmt.bindString(4, BEENTRY);
        }
 
        String BETAG = entity.getBETAG();
        if (BETAG != null) {
            stmt.bindString(5, BETAG);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public BE_DIC_PUB readEntity(Cursor cursor, int offset) {
        BE_DIC_PUB entity = new BE_DIC_PUB( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.getString(offset + 1), // BEWORD
            cursor.isNull(offset + 2) ? null : cursor.getInt(offset + 2), // BEINDEX
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // BEENTRY
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4) // BETAG
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, BE_DIC_PUB entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setBEWORD(cursor.getString(offset + 1));
        entity.setBEINDEX(cursor.isNull(offset + 2) ? null : cursor.getInt(offset + 2));
        entity.setBEENTRY(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setBETAG(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(BE_DIC_PUB entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(BE_DIC_PUB entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
